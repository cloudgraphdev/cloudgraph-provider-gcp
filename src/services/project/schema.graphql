type gcpProject @key(fields: "id") {
  id: String! @id @search(by: [hash])
  name: String @search(by: [hash, regexp])
  parent: String @search(by: [hash, regexp])
  projectId: String @search(by: [hash, regexp])
  state: String @search(by: [hash, regexp])
  displayName: String @search(by: [hash, regexp])
  createTime: String @search(by: [hash, regexp])
  updateTime: String @search(by: [hash, regexp])
  deleteTime: String @search(by: [hash, regexp])
  etag: String @search(by: [hash, regexp])
  labels: [gcpRawLabel]
  alertPolicies: [gcpAlertPolicy] @hasInverse(field: project)
  apiKeys: [gcpApiKey] @hasInverse(field: project)
  cdnBackendBucket: [gcpCdnBackendBucket] @hasInverse(field: project)
  cdnBackendService: [gcpCdnBackendService] @hasInverse(field: project)
  cdnUrlMap: [gcpCdnUrlMap] @hasInverse(field: project)
  cloudFunctions: [gcpCloudFunction] @hasInverse(field: project)
  computeProject: [gcpComputeProject] @hasInverse(field: project)
  dnsManagedZones: [gcpDnsManagedZone] @hasInverse(field: project)
  dnsPolicies: [gcpDnsPolicy] @hasInverse(field: project)
  bigQueryDataset: [gcpBigQueryDataset] @hasInverse(field: project)
  bigQueryConnection: [gcpBigQueryConnection] @hasInverse(field: project)
  bigQueryReservation: [gcpBigQueryReservation] @hasInverse(field: project)
  bigQueryReservationCapacityCommitment: [gcpBigQueryReservationCapacityCommitment]
    @hasInverse(field: project)
  bigQueryDataTransfer: [gcpBigQueryDataTransfer] @hasInverse(field: project)
  bigQueryDataTransferRun: [gcpBigQueryDataTransferRun]
    @hasInverse(field: project)
  vpcConnectors: [gcpVpcConnector] @hasInverse(field: project)
  kmsKeyRing: [gcpKmsKeyRing] @hasInverse(field: project)
  cloudRouters: [gcpCloudRouter] @hasInverse(field: project)
  iamPolicies: [gcpIamPolicy] @hasInverse(field: project)
  logBuckets: [gcpLogBucket] @hasInverse(field: project)
  logMetrics: [gcpLogMetric] @hasInverse(field: project)
  logViews: [gcpLogView] @hasInverse(field: project)
  logSinks: [gcpLogSink] @hasInverse(field: project)
  storageBuckets: [gcpStorageBucket] @hasInverse(field: project)
  firewalls: [gcpFirewall] @hasInverse(field: project)
  folder: [gcpFolder] @hasInverse(field: projects)
  organization: [gcpOrganization] @hasInverse(field: projects)
  secrets: [gcpSecret] @hasInverse(field: project)
  sslPolicies: [gcpSslPolicy] @hasInverse(field: project)
  networks: [gcpNetwork] @hasInverse(field: project)
  subnets: [gcpSubnet] @hasInverse(field: project)
  targetSslProxies: [gcpTargetSslProxy] @hasInverse(field: project)
  targetHttpsProxies: [gcpTargetHttpsProxy] @hasInverse(field: project)
  vmInstances: [gcpVmInstance] @hasInverse(field: project)
  assets: [gcpAsset] @hasInverse(field: project)
  sqlInstances: [gcpSqlInstance] @hasInverse(field: project)
  serviceAccounts: [gcpServiceAccount] @hasInverse(field: project)
  kmsCryptoKeys: [gcpKmsCryptoKey] @hasInverse(field: project)
  dataprocClusters: [gcpDataprocCluster] @hasInverse(field: project)
  dataprocAutoscalingPolicies: [gcpDataprocAutoscalingPolicy]
    @hasInverse(field: project)
  dataprocJobs: [gcpDataprocJob] @hasInverse(field: project)
  dataprocWorkflowTemplates: [gcpDataprocWorkflowTemplate]
    @hasInverse(field: project)
  aiPlatformNotebooks: [gcpAiPlatformNotebook] @hasInverse(field: project)
  apiGatewayGateways: [gcpApiGatewayGateway] @hasInverse(field: project)
  apiGatewayApis: [gcpApiGatewayApi] @hasInverse(field: project)
  apiGatewayApiConfigs: [gcpApiGatewayApiConfig] @hasInverse(field: project)
  firestoreDatabases: [gcpFirestoreDatabase] @hasInverse(field: project)
}
