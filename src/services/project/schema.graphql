type gcpProject @key(fields: "id") {
  id: String! @id @search(by: [hash])
  name: String @search(by: [hash, regexp])
  parent: String @search(by: [hash, regexp])
  projectId: String @search(by: [hash, regexp])
  state: String @search(by: [hash, regexp])
  displayName: String @search(by: [hash, regexp])
  createTime: String @search(by: [hash, regexp])
  updateTime: String @search(by: [hash, regexp])
  deleteTime: String @search(by: [hash, regexp])
  etag: String @search(by: [hash, regexp])
  labels: [gcpRawLabel]
  alertPolicy: [gcpAlertPolicy] @hasInverse(field: project)
  apiKeys: [gcpApiKey] @hasInverse(field: project)
  cloudFunction: [gcpCloudFunction] @hasInverse(field: project)
  computeProject: [gcpComputeProject] @hasInverse(field: project)
  dnsManagedZone: [gcpDnsManagedZone] @hasInverse(field: project)
  dnsPolicy: [gcpDnsPolicy] @hasInverse(field: project)
  bigQueryDataset: [gcpBigQueryDataset] @hasInverse(field: project)
  bigQueryConnection: [gcpBigQueryConnection] @hasInverse(field: project)
  bigQueryReservation: [gcpBigQueryReservation] @hasInverse(field: project)
  bigQueryReservationCapacityCommitment: [gcpBigQueryReservationCapacityCommitment] @hasInverse(field: project)
  bigQueryDataTransfer: [gcpBigQueryDataTransfer] @hasInverse(field: project)
  bigQueryDataTransferRun: [gcpBigQueryDataTransferRun] @hasInverse(field: project)
  vpcConnectors: [gcpVpcConnector] @hasInverse(field: project)
  kmsKeyRing: [gcpKmsKeyRing] @hasInverse(field: project)
  cloudRouters: [gcpCloudRouter] @hasInverse(field: project)
  iamPolicy: [gcpIamPolicy] @hasInverse(field: project)
  logBucket: [gcpLogBucket] @hasInverse(field: project)
  logMetric: [gcpLogMetric] @hasInverse(field: project)
  logView: [gcpLogView] @hasInverse(field: project)
  logSink: [gcpLogSink] @hasInverse(field: project)
  storageBucket: [gcpStorageBucket] @hasInverse(field: project)
  firewall: [gcpFirewall] @hasInverse(field: project)
  folder: [gcpFolder] @hasInverse(field: project)
  organization: [gcpOrganization] @hasInverse(field: project)
  secretManager: [gcpSecret] @hasInverse(field: project)
  sslPolicies: [gcpSslPolicy] @hasInverse(field: project)
  network: [gcpNetwork] @hasInverse(field: project)
  subnet: [gcpSubnet] @hasInverse(field: project)
  targetSslProxies: [gcpTargetSslProxy] @hasInverse(field: project)
  targetHttpsProxies: [gcpTargetHttpsProxy] @hasInverse(field: project)
  vmInstance: [gcpVmInstance] @hasInverse(field: project)
  assets: [gcpAsset] @hasInverse(field: project)
  sqlInstances: [gcpSqlInstance] @hasInverse(field: project)
  serviceAccounts: [gcpServiceAccount] @hasInverse(field: project)
  kmsCryptoKeys: [gcpKmsCryptoKey] @hasInverse(field: project)
  dataprocCluster: [gcpDataprocCluster] @hasInverse(field: project)
  dataprocClusters: [gcpDataprocCluster] @hasInverse(field: project)
}
